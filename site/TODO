// MyAAC TODO

0.*
	* support duplicated vocation names with different ids
	* sandbox for plugins, don't install when requirements are not passed
	* add changelog management interface
	* kathrine tickets - show/hide
	* csrf token protection
	* guild wars support like in Gesior
	* move rest of the pages to Twig: lostaccount, highscores, etc.

1.0
	* use Composer for additional libraries
		* Twig 1.x
		* PHPMailer 5.x
		* semver
	* i18n support (issue #1 on github)
		* use some web-based translation tools
			* most preferably https://weblate.org
	* use bootstrap (https://getbootstrap.com/) for front end elements
	* extend forum
		* use avatars or player outfits (configurable)
		* colorful nicknames for different groups
		* profile page
			* change signature
			* update avatar
		* member since (in forum post)
		* better looking pagination (bootstrap) + configurable for each template (look: laravel)
		* go to the last post
		* select icon for the topic
	* save plugin configuration in database
		* table name: myaac_config_plugins, columns: plugin, name, type, default, required, extra (json data, like options for select)
	* plugin auto-update and check-version
		* needs support from my-aac.org (plugins database)
	* remove tibiacom template, and include it as a plugin
	* add some strong password requirements when creating new account
		* minimum one big letter, one small letter, digit and one special character?
		* should be configurable
	* change /characters/First+Second to /characters/First_Second
	* remove all copy-writed content

2.0
	* minimum PHP 7.0.0 required - use PHP 7 features
		* remove cache engines that are not supported by this version of PHP
	* remove signatures, creature images (make a separate plugins for them) - this way we save 2.5mb of space
	* remove gesior backward support
	* remove compat functions
	* remove $template['link_*']
	* folder restructure:
		* var/ (variable data - for logs, cache and data)
		* config/
		* bin/
		* public/ (for index.php, images and other public content)
			* js/, css/
			* images/
			* storage/ (all dynamic content like guild images)
		* system/ (for php files, twig templates, locales and other classess)
	* rename templates to themes as templates is meant to be used for twig templates
	* change gifts_system to shop_system configurable
	* move most used options in system/templates dir to separate directories (more transparent)
	* move database fields to separate tables without modifing the OTServ schema (myaac_accounts, myaac_players)
	* fundamental changes in Twig:
		* add option to write themes in Twig
		* change twig global config variable to config('name') function
			* this fixes when config gets updated at run-time
		* change constants: BASE_URL to base_url(), USE_ACCOUNT_NAME to config
	* make use of Model/View/Controller (MVC) approach
		* use some modern and fast Routing library
			* most preferably this one (inspired by Laravel) - https://github.com/skipperbent/simple-php-router
	* configurable session handler: file, database, php
	* change global variables pointing to classes like $db, $cache to Singleton Pattern
	* mobile version
		* switch do desktop/mobile version link
		* inside templates/mobile
		* using Mobile_Detect.php library

x.x - At any time between (version not specified)
	* automatic updater of the AAC files (like in WordPress)
	* better news archive with search function (like on tibia.com)
	* guild wars management (issue #13 on github)
	* update account.management page to be more realistic (like on tibia.com)
	* update guilds page to be more realistic (like on tibia.com)
	* possibility to add extra cache engines with plugins
	* preferably configurable (enable/disable) forum TinyMCE editor
	* OTAdmin support in Admin Panel
	* database towns table support for TFS 1.3
	* two factor authentication for TFS 1.x
	* support for .yml plugin file specification
	* display password strength
		* https://elboletaire.github.io/password-strength-meter/
	* apache2, nginx and lighttpd conf like in phpmyadmin
	* automated testing
		* https://codeception.com/quickstart
		* Travis CI
	* some interface for this would be nice to have (phpmyadmin commands/queries)
		* https://otland.net/threads/phpmyadmin-commands-to-edit-database.7751/
	* replace spells, monsters tables with JavaScript Sortable Tables (DataTables?)
	* add release script (bash) that will automatically create myaac-$VERSION.zip
	* migrations: option to downgrade the database
	* create account: create character
